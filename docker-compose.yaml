version: '3.8'

services:
  redis:
    image: redis:alpine
    container_name: fezinhai_redis
    ports:
      - "${REDIS_PORT:-6379}:6379"
    command: redis-server --requirepass ${REDIS_PASSWORD:-fezinhai_redis_password}
    volumes:
      - redis_data:/data
    restart: always
    networks:
      - fezinhai_network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 5s
      retries: 5

  api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: fezinhai_api
    environment:
      - NODE_ENV=${NODE_ENV:-production}
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_PASSWORD=${REDIS_PASSWORD:-fezinhai_redis_password}
      - AWS_REGION=${AWS_REGION}
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
      - DYNAMODB_TABLE_NAME=${DYNAMODB_TABLE_NAME}
      - SQS_QUEUE_URL=${SQS_QUEUE_URL}
      - JWT_SECRET=${JWT_SECRET}
      - JWT_EXPIRES_IN=${JWT_EXPIRES_IN:-1d}
      - PORT=3000
    ports:
      - "${PORT:-3000}:3000"
    depends_on:
      redis:
        condition: service_healthy
    networks:
      - fezinhai_network
    restart: always

networks:
  fezinhai_network:
    driver: bridge

volumes:
  redis_data:
    driver: local 